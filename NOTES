6/2

1 - make script to update disk as part of "init"
-- create disk with larger size; create vm; ssh in and update disk size
2 -- ssh in and install docker (?) or should we use docker-ready vm?

5/27
install docker via fire and forget

5/26
X only build/pull containers you need
X pull containers unless --build specified [for now always build]

use docker api so that you can do a fire-and-forget launch from workstation or laptop (only
problem is that it's not very "cloud-y" -- you have to have the s/w installed 
on every workstation / laptop. although I guess that's the same as with "gcloud"
and maybe if it's useful enough we would incorporate into gcloud)

install docker (via ssh for fire-and-forget)

load up on coreos+container

take one last crack at getting properly permitted android studio in container (don't
have to untar or chmod -R

ssh -- ugh. need docker improvements. latching onto the ssh pipe is not
safe and fragile.

dev environment--
establish git connection; clone/pull initial setup -- need keys
set up framework

5/14
todo:
add data volume
X fix android studio permissions -- try making a group setting
X factor out "start" in case you run ssh before you've started the vm
X add -android, -appengine; 


common uses:
gcd init --project foo --android [build/pull's android which b/p's crd, launches studio]
gcd init --project bar --appengine [b/p'cloudtools->crd, launches sublime]
[smae] --repo git@github.com:dougbo/baz.git [populates source area from repo; saves
       repo name for subsequent updates]


? do we always use the app engine metadata store?
? does that mean we always authenticate? we always need the gcloud with the main gcdev?
? do we put gcdev in its own container 

5/12 pm
todo:
x split google dev env
add data fork 

5/12 am
todo:
. add template
. split google dev env
. split android studio; cloud work

issues:
. make local store per-user per-project
. take container as parameter for edit
. resume existing ssh session
.. maybe refuse if there's more than one?


gcdev init --project dougbo  
<- sets default project. need to gcdev set [project] or gcedit --project <x> to change
<- also sets initial parameters, some of which can't be reset: e.g., editor/template/lang

gcdev list [--project x] [-v]
<- print the container id's running matching the current project id
<- print all containers and project id's

gcdev edit [--project x] [--container x] [--restart] 
<- starts or restarts per-user editing environment for given project
. standard usage: no running containers -- creates per-user container and runs crd
. reports container ID

. if one container exists and is running, or if container specified and is running
restarts crd if --restart
.. else 
.. verifies project is the same as current and reports container ID; else restarts crd
. reports container ID

5/8
q: could run this script either in cloud or from some remote device
-- make it so that it runs in the cloud; we're all-in, plus that way 
it works on chromebooks
-- that suggests that you want ssh capability fairly early on, and that there will be a second phase of init that happens over ssh

template can be ADD'ed from dockerfile or via docker cmd
